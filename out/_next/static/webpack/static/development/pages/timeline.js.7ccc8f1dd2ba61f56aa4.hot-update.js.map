{"version":3,"file":"static/webpack/static\\development\\pages\\timeline.js.7ccc8f1dd2ba61f56aa4.hot-update.js","sources":["webpack:///./page-containers/Timeline/Container.js","webpack:///./page-containers/Timeline/Provider.js"],"sourcesContent":["import _ from 'lodash';\r\nimport Link from 'next/link';\r\nimport Head from 'next/head';\r\nimport { useEffect } from 'react';\r\nimport Timeline from './Timeline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useTimelineContext } from './Provider';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Button, useTheme } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport AnnouncementIcon from '@material-ui/icons/Announcement';\r\nimport useNeumorphShadowStyles from '../../lib/hooks/useNeumorphShadow';\r\n\r\nconst useStyles = makeStyles(({ palette, spacing, typography }) => ({\r\n\tcontainer: {\r\n\t\tpadding: spacing(3, 2),\r\n\t},\r\n\ttitle: {\r\n\t\tfontWeight: typography.fontWeightMedium,\r\n\t},\r\n\tsubtitle: {\r\n\t\tcolor: palette.grey[500],\r\n\t},\r\n}));\r\n\r\nexport default (props) => {\r\n\tconst theme = useTheme();\r\n\tconst classes = useStyles();\r\n\tconst { countries, timelineCountry, setTimlineCountry, setTimeline } = useTimelineContext();\r\n\tconst shadow = useNeumorphShadowStyles({ spread: 1, blurLength: 7, bgColor: theme.palette.secondary.main });\r\n\r\n\tuseEffect(() => {\r\n\t\tif (countries.length === 0) return;\r\n\r\n\t\tsetTimeline((prev) => ({ ...prev, loading: false }));\r\n\t\tconst foundCountry = _.find(countries, (v) => v.alpha2.toLowerCase() === timelineCountry.alpha2.toLowerCase());\r\n\t\tif (foundCountry) setTimlineCountry({ name: foundCountry.name, alpha2: foundCountry.alpha2 });\r\n\t\tsetTimeline((prev) => ({ ...prev, loading: false }));\r\n\t}, [countries]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Head>\r\n\t\t\t\t<title>{timelineCountry.alpha2} Timeline | Covid-19</title>\r\n\t\t\t</Head>\r\n\t\t\t<Container maxWidth=\"lg\" style={{ overflow: 'hidden' }}>\r\n\t\t\t\t<Grid container spacing={3} className={classes.container}>\r\n\t\t\t\t\t{/* Header */}\r\n\t\t\t\t\t<Grid item container spacing={2} alignItems=\"center\" justify=\"space-between\">\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t<Typography variant=\"h5\" className={classes.title}>\r\n\t\t\t\t\t\t\t\t\tTimeline by Country\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\" className={classes.subtitle}>\r\n\t\t\t\t\t\t\t\t\tSelect a country to see its entire timeline\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tmarginLeft: 'auto',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Link passHref href=\"/latest\">\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tvariant=\"text\"\r\n\t\t\t\t\t\t\t\t\tdisableFocusRipple\r\n\t\t\t\t\t\t\t\t\tclassName={shadow.root}\r\n\t\t\t\t\t\t\t\t\tendIcon={<AnnouncementIcon />}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tcolor: theme.palette.background.default,\r\n\t\t\t\t\t\t\t\t\t\tbackgroundColor: theme.palette.secondary.main,\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tLatest\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t<Timeline />\r\n\t\t\t\t</Grid>\r\n\t\t\t</Container>\r\n\t\t</>\r\n\t);\r\n};\r\n","import useCountries from '../../lib/hooks/useCountries';\r\nimport { createContext, useMemo, useState, useContext } from 'react';\r\nimport useTimelineByCountry from '../../lib/hooks/useTimelineByCountry';\r\n\r\nconst TimelineContext = createContext({\r\n\tcountries: [],\r\n\tsetCountries: () => {},\r\n\r\n\ttimelineCountry: '',\r\n\tsetTimlineCountry: () => {},\r\n\r\n\ttimeline: { loading: false, data: [] },\r\n\tsetTimeline: () => {},\r\n});\r\n\r\nconst TimelineProvider = ({ country, children }) => {\r\n\tconst [countries, setCountries] = useState([]);\r\n\tconst [timelineCountry, setTimlineCountry] = useState({ alpha2: country || 'US', name: '' });\r\n\r\n\tconst [timeline, setTimeline] = useState({\r\n\t\tloading: false,\r\n\t\tdata: [{ cases: 0, deaths: 0, recovered: 0, last_update: new Date() }],\r\n\t});\r\n\tuseCountries(setCountries);\r\n\tuseTimelineByCountry(timelineCountry.alpha2, setTimeline);\r\n\r\n\tconst value = useMemo(\r\n\t\t() => ({\r\n\t\t\tcountries,\r\n\t\t\tsetCountries,\r\n\r\n\t\t\ttimeline,\r\n\t\t\tsetTimeline,\r\n\r\n\t\t\ttimelineCountry,\r\n\t\t\tsetTimlineCountry,\r\n\t\t}),\r\n\t\t[countries, timeline]\r\n\t);\r\n\r\n\treturn <TimelineContext.Provider value={value}>{children}</TimelineContext.Provider>;\r\n};\r\n\r\nexport const useTimelineContext = () => useContext(TimelineContext);\r\n\r\nexport default TimelineProvider;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAPA;AAAA;AAYA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AAOA;AACA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AALA;AAqBA;;;;;;;;;;;;;;;;;;;;AC5FA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AARA;AACA;AAUA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAAA;AAFA;AAAA;AACA;AADA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAJA;AAAA;AACA;AAOA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AARA;AAAA;AAaA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAEA;;;;A","sourceRoot":""}